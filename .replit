
modules = ["python-3.11"]

[nix]
channel = "stable-24_05"
packages = ["glibcLocales"]

[workflows]
runButton = "Main Bot Run (Smart Rating)"

[[workflows.workflow]]
name = "Generate Manual Template Only"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üìù Generating manual X thread template (no automated posting)...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python generate_thread_template.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Template generated! Check the output file for manual posting.\""

[[workflows.workflow]]
name = "Run Production Bot"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üöÄ Running production crypto bot with multi-source data...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"Using Binance US, Coinbase, CoinGecko, X API, and Reddit for dynamic data\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py"

[[workflows.workflow]]
name = "Post to Discord Only"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîî Starting Discord-only posting mode...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py --test-discord"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Discord posting completed!\""

[[workflows.workflow]]
name = "X Queue Only (Safe)"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîÑ Running bot with X queue system only (no direct posting)\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚ö†Ô∏è  This mode prevents rate limits by using background posting queue\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py --queue-only"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Posts queued for background processing\""

[[workflows.workflow]]
name = "Test X Queue Safe"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üß™ Testing X queue system (SAFE - no direct posting)\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"This will queue posts for background processing to avoid rate limits\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py --queue-only"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Test completed - check queue status\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_queue_status.py"

[[workflows.workflow]]
name = "X Post Only (Ultra Safe)"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîí Ultra-safe X posting mode - ZERO rate limit risk\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ X API search: DISABLED\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ X API auth tests: BYPASSED\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ X API rate checks: BYPASSED\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Only X API posting: ENABLED\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py --queue-only"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Posts queued safely - check queue status:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_queue_status.py"

[[workflows.workflow]]
name = "Ultra Safe X Post Test"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üß™ Testing ultra-safe X posting workflow...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ This mode bypasses ALL rate limit checks\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Uses Rumble fallback for YouTube rate limits\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Queues posts immediately to avoid direct API calls\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py --queue-only"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Test completed! Checking queue status:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_queue_status.py"

[[workflows.workflow]]
name = "Test X Posting Safe"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üß™ Testing X posting with ultra-safe queue mode...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ This bypasses all rate limit checks and uses queue system\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py --queue-only"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Checking queue status:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_queue_status.py"

[[workflows.workflow]]
name = "Main Bot Run (X Free Tier Safe)"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üöÄ Starting CryptoBot with X API Free Tier Protection...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ X API search: DISABLED (prevents rate limits)\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ X API posting: QUEUE ONLY (respects free tier)\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Social metrics: Alternative APIs + fallbacks\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Monthly limit: 1,500 tweets (~50/day)\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py --queue-only"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üìä Checking queue status and rate limits:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_queue_status.py"

[[workflows.workflow]]
name = "X Complete Mirror (Discord Features)"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîÑ Starting X posting with COMPLETE Discord feature parity...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Full data collection: Price + Social + YouTube + Research\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Individual coin posts: Detailed format for each of 8 coins\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Safe queue system: All posts queued to respect rate limits\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Same content as Discord: Identical feature set\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py --queue-only"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üìä Verifying complete thread was queued:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_queue_status.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ X now has same features as Discord workflow!\""

[[workflows.workflow]]
name = "Smart Content Rating Bot"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üéØ Starting CryptoBot with Smart Content Rating System...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ YouTube/Rumble failover: ENABLED\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Content accuracy rating: 1-10 scale\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Trusted creator detection: ACTIVE\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Source preference by coin: OPTIMIZED\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py --queue-only"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üìä Checking content quality and queue status:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_queue_status.py"

[[workflows.workflow]]
name = "X Complete Mirror (Smart Rating)"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîÑ Starting X posting with Smart Content Rating + Discord parity...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ YouTube/Rumble smart failover based on accuracy ratings\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Trusted creator prioritization system\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Content quality scoring (1-10 scale)\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Coin-specific source preferences\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Full data collection: Price + Social + Rated Video + Research\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py --queue-only"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üìä Verifying high-quality content was selected:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_queue_status.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ X now has rated content system matching Discord features!\""

[[workflows.workflow]]
name = "Main Bot Run (Smart Rating)"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üöÄ Starting CryptoBot with Smart Content Rating System...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ YouTube/Rumble intelligent failover\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Content accuracy scoring: 1-10 scale\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Trusted creator boost: +1.5 points\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Quality keyword analysis: ACTIVE\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Coin-specific source preferences\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ X API posting: QUEUE ONLY (respects free tier)\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py --queue-only"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üìä Content quality summary:\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_queue_status.py"

[deployment]
run = ["sh", "-c", "python generate_thread_template.py"]
build = ["sh", "-c", "mkdir -p data && python -m pip install --upgrade pip && pip install -r requirements.txt"]
ignorePorts = true

[[ports]]
localPort = 8080
externalPort = 80

[[ports]]
localPort = 8081
externalPort = 8081
