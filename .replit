modules = ["python-3.11"]

[nix]
channel = "stable-24_05"

[workflows]
runButton = "X Platform Post"

[[workflows.workflow]]
name = "Main Bot Run"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py --queue-only"

[[workflows.workflow]]
name = "Post to Discord"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py --test-discord"

[[workflows.workflow]]
name = "Check Queue Status"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_queue_status.py"

[[workflows.workflow]]
name = "Test Discord Only"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo 'üß™ Testing Discord webhook posting...'"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py --test-discord"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo '‚úÖ Discord test completed!'"

[[workflows.workflow]]
name = "Content Verification Report"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python content_verification_report.py"

[[workflows.workflow]]
name = "Post Live Stream Alerts"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üî¥ POSTING UPCOMING CRYPTO LIVE STREAM ALERTS\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python -c \"import asyncio; from modules.x_live_streams import get_next_stream_posts; from modules.api_clients import get_x_client; import time; def post_stream_alerts(): [exec_code]; post_stream_alerts()\""

[[workflows.workflow]]
name = "Show Upcoming Streams"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîç DISCOVERING UPCOMING CRYPTO LIVE STREAMS\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python -c \"import asyncio; import aiohttp; from modules.x_live_streams import discover_upcoming_live_streams; from datetime import datetime; asyncio.run(discover_upcoming_live_streams(aiohttp.ClientSession()))\""

[[workflows.workflow]]
name = "Test Fixed Bot"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üß™ Testing fixed bot with enhanced formatting...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py --test-discord"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Test completed - check Discord for proper formatting!\""

[[workflows.workflow]]
name = "X Platform Post"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üöÄ Posting crypto analysis to X (Twitter)...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py --queue-only"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ X posting completed successfully!\""

[[workflows.workflow]]
name = "Discord Test Post"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_workflow_conflicts.py --type post_to_discord || exit 1"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üß™ Testing Discord webhook posting...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python bot_v2.py --test-discord"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python check_workflow_conflicts.py --type post_to_discord --complete"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Discord test completed successfully!\""

[[workflows.workflow]]
name = "Content Verification Test"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîç Running enhanced content verification test...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python -c \"import asyncio; from modules.content_verification import verify_all_content; asyncio.run(verify_all_content({'coin_name': 'ripple', 'price': 2.21}))\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Content verification test completed!\""

[[workflows.workflow]]
name = "Test X API"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_x_api.py"

[[workflows.workflow]]
name = "Verify Real X Posting"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîç Testing if posts actually reach X platform...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python test_real_x_posting.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚ö†Ô∏è Check the tweet URL manually to confirm posting works\""

[[workflows.workflow]]
name = "Run Diagnostics"
author = 43339402
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîç Running comprehensive system diagnostics...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python run_diagnostics.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Diagnostics completed - check results above\""

[deployment]
run = ["sh", "-c", "python bot_v2.py --queue-only"]
build = ["sh", "-c", "mkdir -p data && python -m pip install --upgrade pip && pip install -r requirements.txt"]
ignorePorts = true

[[ports]]
localPort = 8080
externalPort = 80

[[ports]]
localPort = 8081
externalPort = 8081
