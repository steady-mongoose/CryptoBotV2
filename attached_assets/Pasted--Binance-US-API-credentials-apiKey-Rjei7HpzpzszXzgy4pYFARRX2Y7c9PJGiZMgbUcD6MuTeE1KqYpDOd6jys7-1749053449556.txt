# Binance.US API credentials
$apiKey = "Rjei7HpzpzszXzgy4pYFARRX2Y7c9PJGiZMgbUcD6MuTeE1KqYpDOd6jys7Vd5qi"
$apiSecret = "HqAkNOcohbhGIiDLqG7NQG15j9xrJgRNhks75e60hgx0zyOhbdG9fddw4O69IehS"

# Base URL and endpoint
$baseUrl = "https://api.binance.us"
$endpoint = "/api/v3/account"

# Generate timestamp (in milliseconds)
$timestamp = [int64](([datetime]::UtcNow)-(get-date "1970-01-01")).TotalMilliseconds

# Query parameters
$queryParams = @{
    "timestamp" = $timestamp
    # "recvWindow" = 10000  # Uncomment if you need a wider time window
}

# Convert query parameters to a query string
$queryString = ($queryParams.GetEnumerator() | Sort-Object Name | ForEach-Object { "$($_.Name)=$($_.Value)" }) -join "&"

# Generate HMAC-SHA256 signature
# Convert the API secret and query string to bytes
$keyBytes = [System.Text.Encoding]::UTF8.GetBytes($apiSecret)
$messageBytes = [System.Text.Encoding]::UTF8.GetBytes($queryString)

# Create HMAC-SHA256 hash
$hmac = New-Object System.Security.Cryptography.HMACSHA256
$hmac.Key = $keyBytes
$hashBytes = $hmac.ComputeHash($messageBytes)

# Convert the hash to a hexadecimal string
$signature = [System.BitConverter]::ToString($hashBytes).Replace("-", "").ToLower()

# Add the signature to the query string
$queryStringWithSignature = "$queryString&signature=$signature"

# Set the headers with the API key
$headers = @{
    "X-MBX-APIKEY" = $apiKey
}

# Make the API request
try {
    $uri = "$baseUrl$endpoint`?$queryStringWithSignature"
    Write-Host "Request URI: $uri"
    $response = Invoke-RestMethod -Uri $uri -Method Get -Headers $headers -ErrorAction Stop
    Write-Host "Success! Response:"
    $response | ConvertTo-Json -Depth 10 | Write-Host
}
catch {
    Write-Host "Error occurred: $($_.Exception.Message)"
    if ($_.Exception.Response) {
        $errorResponse = $_.Exception.Response.GetResponseStream()
        $reader = New-Object System.IO.StreamReader($errorResponse)
        $errorText = $reader.ReadToEnd()
        Write-Host "Error Details: $errorText"
    }
}